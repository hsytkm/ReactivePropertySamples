<ctrl:MyPageControl
    x:Class="ReactivePropertySamples.Views.Pages.ReadOnlyReactiveCollection1Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:local="clr-namespace:ReactivePropertySamples.Views.Pages"
    xmlns:ctrl="clr-namespace:ReactivePropertySamples.Views.Controls"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800"
    Description="TextBox の string を Model の ObservableCollection&lt;string&gt; に追加し、&#xD;&#xA;ViewModel の ToReadOnlyReactiveCollection() により表示する。">

    <ctrl:MyPageControl.Resources>
        <system:String x:Key="Message">TextBox の string を Model の ObservableCollection&lt;string&gt; に追加し、&#xD;&#xA;ViewModel の ToReadOnlyReactiveCollection() により表示する。</system:String>
    </ctrl:MyPageControl.Resources>
    
    <ctrl:MyPageControl.Subtitle>
        ReadOnlyReactiveCollection
    </ctrl:MyPageControl.Subtitle>

    <!-- 改行したいので、記法変える（なぜ上だと動くか説明できない…勘で発見した）
    <ctrl:MyPageControl.Description>
        TextBox の string を Model の ObservableCollection&lt;string&gt; に追加し、&#xD;&#xA;
        ViewModel の ToReadOnlyReactiveCollection() により表示する。
    </ctrl:MyPageControl.Description>
    -->

    <ctrl:MyPageControl.Keywords>
        <x:Array Type="{x:Type system:String}" >
            <system:String>ReadOnlyReactiveCollection</system:String>
            <system:String>ToReadOnlyReactiveCollection</system:String>
        </x:Array>
    </ctrl:MyPageControl.Keywords>

    <DockPanel Margin="5" >
        <ctrl:MyPageTitle DockPanel.Dock="Top"
                          DataContext="{Binding ., Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type ctrl:MyPageControl}}}"/>

        <DockPanel DockPanel.Dock="Top" Margin="20,10" >
            <Button DockPanel.Dock="Right" Margin="20,0,10,0" Padding="10,0" Content="Clear"
                    Command="{Binding ClearModelPeopleCommand, Mode=OneTime}" />
            <Button DockPanel.Dock="Right" Margin="10,0" Padding="10,0" Content="Add to Model" >
                <i:Interaction.Triggers>
                    <!-- 当初は Button.Comand に設定していたが、先に Textクリア → CommandParameter=空文字 となったので、InvokeCommandAction を使った -->
                    <i:EventTrigger EventName="Click" >
                        <i:InvokeCommandAction Command="{Binding AddPersonNameToModelCommand, Mode=OneTime}"
                                               CommandParameter="{Binding Text, Mode=OneWay, Source={x:Reference nameTextBox}}" />
                        <i:ChangePropertyAction TargetName="nameTextBox" PropertyName="Text" Value="" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <TextBox x:Name="nameTextBox" />
        </DockPanel>

        <ItemsControl Margin="20,10" Background="LightBlue"
                      ItemsSource="{Binding People, Mode=OneWay}" >
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name, Mode=OneTime}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

    </DockPanel>
</ctrl:MyPageControl>
